version: '3.8'

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - iterview-db
      - redis
    env_file:
      - .env
    environment:
      - SERVICE=backend
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]  

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"   
    environment:
      - SERVICE=frontend
    command: ["npm", "run", "dev"]

  iterview-db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A backend.celery.app worker --loglevel=info
    depends_on:
      - redis
      - django
    env_file:
      - .env

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A backend.celery.app beat --loglevel=info
    depends_on:
      - redis
      - django
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
